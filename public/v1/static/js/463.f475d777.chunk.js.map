{"version":3,"file":"static/js/463.f475d777.chunk.js","mappings":"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","sources":["../node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/installations/node_modules/idb/build/index.js","../node_modules/@firebase/installations/src/util/constants.ts","../node_modules/@firebase/installations/src/util/errors.ts","../node_modules/@firebase/installations/src/functions/common.ts","../node_modules/@firebase/installations/src/functions/create-installation-request.ts","../node_modules/@firebase/installations/src/util/sleep.ts","../node_modules/@firebase/installations/src/helpers/generate-fid.ts","../node_modules/@firebase/installations/src/helpers/buffer-to-base64-url-safe.ts","../node_modules/@firebase/installations/src/util/get-key.ts","../node_modules/@firebase/installations/src/helpers/fid-changed.ts","../node_modules/@firebase/installations/src/helpers/idb-manager.ts","../node_modules/@firebase/installations/src/helpers/get-installation-entry.ts","../node_modules/@firebase/installations/src/functions/generate-auth-token-request.ts","../node_modules/@firebase/installations/src/helpers/refresh-auth-token.ts","../node_modules/@firebase/installations/src/api/get-token.ts","../node_modules/@firebase/installations/src/api/get-id.ts","../node_modules/@firebase/installations/src/functions/delete-installation-request.ts","../node_modules/@firebase/installations/src/helpers/extract-app-config.ts","../node_modules/@firebase/installations/src/functions/config.ts","../node_modules/@firebase/installations/src/index.ts"],"sourcesContent":["const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make Typescript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID can not be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * Firebase Installations\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\nregisterVersion(name, version, '__BUILD_TARGET__');\n"],"names":["idbProxyableTypes","cursorAdvanceMethods","instanceOfAny","object","constructors","some","c","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","get","target","prop","receiver","IDBTransaction","objectStoreNames","undefined","objectStore","wrap","set","value","has","wrapFunction","func","IDBDatabase","prototype","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","_len2","arguments","length","args","Array","_key2","apply","unwrap","this","_len3","_key3","storeNames","_len","_key","tx","call","concat","sort","transformCachableValue","done","Promise","resolve","reject","unlisten","removeEventListener","complete","error","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","request","promise","success","result","then","catch","promisifyRequest","newValue","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","storeName","_target","_args","_context","prev","next","store","index","shift","all","abrupt","sent","stop","_x","oldTraps","_objectSpread","callback","PENDING_TIMEOUT_MS","PACKAGE_VERSION","version","INTERNAL_AUTH_VERSION","INSTALLATIONS_API_URL","TOKEN_EXPIRATION_BUFFER","ERROR_DESCRIPTION_MAP","_ERROR_DESCRIPTION_MA","_defineProperty","ERROR_FACTORY","ErrorFactory","isServerError","FirebaseError","code","getInstallationsEndpoint","_ref","projectId","extractAuthTokenInfoFromResponse","response","token","requestStatus","expiresIn","responseExpiresIn","Number","creationTime","Date","now","getErrorFromResponse","_x2","_getErrorFromResponse","requestName","responseJson","errorData","json","create","serverCode","serverMessage","message","serverStatus","status","getHeaders","_ref2","apiKey","Headers","Accept","getHeadersWithAuth","appConfig","refreshToken","headers","append","getAuthorizationHeader","retryIfServerError","_x3","_retryIfServerError","_callee2","fn","_context2","createInstallationRequest","_x4","_x5","_createInstallationRequest","_callee3","_ref4","_ref5","heartbeatServiceProvider","fid","endpoint","heartbeatService","heartbeatsHeader","body","responseValue","registeredInstallationEntry","_context3","getImmediate","optional","getHeartbeatsHeader","authVersion","appId","sdkVersion","JSON","stringify","fetch","ok","registrationStatus","authToken","sleep","ms","setTimeout","VALID_FID_PATTERN","INVALID_FID","generateFid","fidByteArray","Uint8Array","self","crypto","msCrypto","getRandomValues","b64String","array","btoa","String","fromCharCode","_toConsumableArray","substr","encode","test","_a","getKey","appName","fidChangeCallbacks","fidChanged","key","callFidChangeCallbacks","channel","getBroadcastChannel","postMessage","closeBroadcastChannel","broadcastFidChange","callbacks","_step","_iterator","_createForOfIteratorHelper","s","n","err","e","f","broadcastChannel","BroadcastChannel","onmessage","data","size","close","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","name","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","openDB","createObjectStore","_x6","_x7","_set","_callee4","oldValue","_context4","put","remove","_x8","_remove","_callee5","_context5","delete","update","_x9","_x10","_update","_callee6","updateFn","_context6","getInstallationEntry","_x11","_getInstallationEntry","_callee7","installations","registrationPromise","installationEntry","_context7","oldEntry","updateOrCreateInstallationEntry","entryWithPromise","triggerRegistrationIfNecessary","t0","clearTimedOutRequest","navigator","onLine","inProgressEntry","registrationTime","_x12","_x13","_registerInstallation","registerInstallation","waitUntilFidRegistration","_callee8","_context8","customData","_x14","_waitUntilFidRegistration","_callee9","entry","_yield$getInstallatio","_context9","updateInstallationRequest","generateAuthTokenRequest","_x15","_x16","_generateAuthTokenRequest","_callee10","_ref6","completedAuthToken","_context10","getGenerateAuthTokenEndpoint","installation","_ref7","refreshAuthToken","_x17","_refreshAuthToken","_callee11","forceRefresh","tokenPromise","_args11","_context11","isEntryRegistered","oldAuthToken","isAuthTokenValid","waitUntilAuthTokenRequest","makeAuthTokenRequestInProgressEntry","fetchAuthTokenFromServer","_x18","_x19","_waitUntilAuthTokenRequest","_callee12","_context12","updateAuthTokenRequest","requestTime","Object","assign","_x20","_x21","_fetchAuthTokenFromServer","_callee13","updatedInstallationEntry","_updatedInstallationEntry","_context13","isAuthTokenExpired","inProgressAuthToken","_getId","_callee14","installationsImpl","_yield$getInstallatio2","_context14","console","_getToken","_callee15","_args15","_context15","completeInstallationRegistration","_x24","_completeInstallationRegistration","_callee16","_yield$getInstallatio3","_context16","getMissingValueError","valueName","INSTALLATIONS_NAME","publicFactory","container","app","getProvider","options","_i","_configKeys","keyName","extractAppConfig","_getProvider","_delete","internalFactory","installationsInternal","getId","_x22","getToken","_x23","_registerComponent","Component","registerVersion"],"sourceRoot":""}