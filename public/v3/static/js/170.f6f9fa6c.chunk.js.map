{"version":3,"file":"static/js/170.f6f9fa6c.chunk.js","mappings":"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","sources":["../node_modules/@firebase/messaging/node_modules/idb/build/wrap-idb-value.js","../node_modules/@firebase/messaging/node_modules/idb/build/index.js","../node_modules/@firebase/messaging/src/util/constants.ts","../node_modules/@firebase/messaging/src/interfaces/internal-message-payload.ts","../node_modules/@firebase/messaging/src/helpers/array-base64-translator.ts","../node_modules/@firebase/messaging/src/helpers/migrate-old-database.ts","../node_modules/@firebase/messaging/src/internals/idb-manager.ts","../node_modules/@firebase/messaging/src/util/errors.ts","../node_modules/@firebase/messaging/src/internals/requests.ts","../node_modules/@firebase/messaging/src/internals/token-manager.ts","../node_modules/@firebase/messaging/src/helpers/externalizePayload.ts","../node_modules/@firebase/messaging/src/helpers/logToFirelog.ts","../node_modules/@firebase/messaging/src/helpers/extract-app-config.ts","../node_modules/@firebase/messaging/src/messaging-service.ts","../node_modules/@firebase/messaging/src/helpers/registerDefaultSw.ts","../node_modules/@firebase/messaging/src/helpers/updateSwReg.ts","../node_modules/@firebase/messaging/src/helpers/updateVapidKey.ts","../node_modules/@firebase/messaging/src/api/getToken.ts","../node_modules/@firebase/messaging/src/helpers/logToScion.ts","../node_modules/@firebase/messaging/src/listeners/window-listener.ts","../node_modules/@firebase/messaging/src/helpers/is-console-message.ts","../node_modules/@firebase/messaging/src/helpers/register.ts","../node_modules/@firebase/messaging/src/api/isSupported.ts","../node_modules/@firebase/messaging/src/api/deleteToken.ts","../node_modules/@firebase/messaging/src/api/onMessage.ts","../node_modules/@firebase/messaging/src/api.ts","../node_modules/@capacitor-firebase/messaging/src/web.ts"],"sourcesContent":["const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction));\n        });\n    }\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking)\n            db.addEventListener('versionchange', () => blocking());\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked)\n        request.addEventListener('blocked', () => blocked());\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\nexport interface NotificationPayloadInternal extends NotificationOptions {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n  icon?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, deleteDB, openDB } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\ninterface MessagingDB extends DBSchema {\n  'firebase-messaging-store': {\n    key: string;\n    value: TokenDetails;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<MessagingDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<MessagingDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    await deleteTokenInternal(messaging);\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n\n  const icon = messagePayloadInternal.notification!.icon;\n  if (!!icon) {\n    payload.notification!.icon = icon;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (\n    !messagePayloadInternal.fcmOptions &&\n    !messagePayloadInternal.notification?.click_action\n  ) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link =\n    messagePayloadInternal.fcmOptions?.link ??\n    messagePayloadInternal.notification?.click_action;\n\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions?.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst FIRELOG_ENDPOINT = _mergeStrings(\n  'hts/frbslgigp.ogepscmv/ieo/eaylg',\n  'tp:/ieaeogn-agolai.o/1frlglgc/o'\n);\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          FIRELOG_ENDPOINT.concat('?key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify(fcmEvent);\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_SW_PATH, DEFAULT_SW_SCOPE } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: (e as Error)?.message\n    });\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics =\n    await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm5, esm2017, cjs5, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns an Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If a notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optinoal service worker registration\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","import type { PermissionState } from '@capacitor/core';\nimport { WebPlugin } from '@capacitor/core';\nimport type { MessagePayload } from 'firebase/messaging';\nimport {\n  deleteToken,\n  getMessaging,\n  getToken,\n  isSupported as isSupportedInWeb,\n  onMessage,\n} from 'firebase/messaging';\n\nimport type {\n  Channel,\n  DeleteChannelOptions,\n  FirebaseMessagingPlugin,\n  GetDeliveredNotificationsResult,\n  GetTokenOptions,\n  GetTokenResult,\n  IsSupportedResult,\n  ListChannelsResult,\n  NotificationReceivedEvent,\n  PermissionStatus,\n  RemoveDeliveredNotificationsOptions,\n  SubscribeToTopicOptions,\n  UnsubscribeFromTopicOptions,\n} from './definitions';\nimport { Notification } from './definitions';\n\nexport class FirebaseMessagingWeb\n  extends WebPlugin\n  implements FirebaseMessagingPlugin\n{\n  public static readonly notificationReceivedEvent = 'notificationReceived';\n\n  constructor() {\n    super();\n    isSupportedInWeb().then(supported => {\n      if (!supported) {\n        return;\n      }\n      const messaging = getMessaging();\n      onMessage(messaging, payload => this.handleNotificationReceived(payload));\n    });\n  }\n\n  public async checkPermissions(): Promise<PermissionStatus> {\n    const receive = this.convertNotificationPermissionToPermissionState(\n      Notification.permission,\n    );\n    return {\n      receive,\n    };\n  }\n\n  public async requestPermissions(): Promise<PermissionStatus> {\n    const notificationPermission = await Notification.requestPermission();\n    const receive = this.convertNotificationPermissionToPermissionState(\n      notificationPermission,\n    );\n    return {\n      receive,\n    };\n  }\n\n  public async isSupported(): Promise<IsSupportedResult> {\n    const isSupported = await isSupportedInWeb();\n    return {\n      isSupported,\n    };\n  }\n\n  public async getToken(options: GetTokenOptions): Promise<GetTokenResult> {\n    const messaging = getMessaging();\n    const token = await getToken(messaging, {\n      vapidKey: options.vapidKey,\n      serviceWorkerRegistration: options.serviceWorkerRegistration,\n    });\n    return {\n      token,\n    };\n  }\n\n  public async deleteToken(): Promise<void> {\n    const messaging = getMessaging();\n    await deleteToken(messaging);\n  }\n\n  public async getDeliveredNotifications(): Promise<GetDeliveredNotificationsResult> {\n    this.throwUnavailableError();\n  }\n\n  public async removeDeliveredNotifications(\n    _options: RemoveDeliveredNotificationsOptions,\n  ): Promise<void> {\n    this.throwUnavailableError();\n  }\n\n  public async removeAllDeliveredNotifications(): Promise<void> {\n    this.throwUnavailableError();\n  }\n\n  public async subscribeToTopic(\n    _options: SubscribeToTopicOptions,\n  ): Promise<void> {\n    this.throwUnavailableError();\n  }\n\n  public async unsubscribeFromTopic(\n    _options: UnsubscribeFromTopicOptions,\n  ): Promise<void> {\n    this.throwUnavailableError();\n  }\n\n  public async createChannel(_options: Channel): Promise<void> {\n    this.throwUnavailableError();\n  }\n\n  public async deleteChannel(_options: DeleteChannelOptions): Promise<void> {\n    this.throwUnavailableError();\n  }\n\n  public async listChannels(): Promise<ListChannelsResult> {\n    this.throwUnavailableError();\n  }\n\n  private handleNotificationReceived(messagePayload: MessagePayload): void {\n    const notification = this.createNotificationResult(messagePayload);\n    const event: NotificationReceivedEvent = {\n      notification,\n    };\n    this.notifyListeners(FirebaseMessagingWeb.notificationReceivedEvent, event);\n  }\n\n  private createNotificationResult(\n    messagePayload: MessagePayload,\n  ): Notification {\n    const notification: Notification = {\n      body: messagePayload.notification?.body,\n      data: messagePayload.data,\n      id: messagePayload.messageId,\n      image: messagePayload.notification?.image,\n      title: messagePayload.notification?.title,\n    };\n    return notification;\n  }\n\n  private convertNotificationPermissionToPermissionState(\n    permission: NotificationPermission,\n  ) {\n    let state: PermissionState = 'prompt';\n    switch (permission) {\n      case 'granted':\n        state = 'granted';\n        break;\n      case 'denied':\n        state = 'denied';\n        break;\n    }\n    return state;\n  }\n\n  private throwUnavailableError(): never {\n    throw this.unavailable('Not available on web.');\n  }\n}\n"],"names":["idbProxyableTypes","cursorAdvanceMethods","instanceOfAny","object","constructors","some","c","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","idbProxyTraps","get","target","prop","receiver","IDBTransaction","objectStoreNames","undefined","objectStore","wrap","set","value","has","wrapFunction","func","IDBDatabase","prototype","transaction","IDBCursor","advance","continue","continuePrimaryKey","includes","_len2","arguments","length","args","Array","_key2","apply","unwrap","this","_len3","_key3","storeNames","_len","_key","tx","call","concat","sort","transformCachableValue","done","Promise","resolve","reject","unlisten","removeEventListener","complete","error","DOMException","addEventListener","cacheDonePromiseForTransaction","IDBObjectStore","IDBIndex","Proxy","IDBRequest","request","promise","success","result","then","catch","promisifyRequest","newValue","openDB","name","version","_ref","blocked","upgrade","blocking","terminated","indexedDB","open","openPromise","event","oldVersion","newVersion","db","deleteDB","deleteDatabase","readMethods","writeMethods","cachedMethods","Map","getMethod","targetFuncName","replace","useIndex","isWrite","method","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","storeName","_target","_args","_context","prev","next","store","index","shift","all","abrupt","sent","stop","_x","oldTraps","_objectSpread","callback","MessageType$1","MessageType","DEFAULT_SW_PATH","DEFAULT_SW_SCOPE","DEFAULT_VAPID_KEY","ENDPOINT","CONSOLE_CAMPAIGN_ID","CONSOLE_CAMPAIGN_NAME","CONSOLE_CAMPAIGN_TIME","CONSOLE_CAMPAIGN_ANALYTICS_ENABLED","arrayToBase64","array","uint8Array","Uint8Array","btoa","String","fromCharCode","_toConsumableArray","base64ToArray","base64String","base64","repeat","rawData","atob","outputArray","i","charCodeAt","OLD_DB_NAME","OLD_DB_VERSION","OLD_OBJECT_STORE_NAME","migrateOldDatabase","_migrateOldDatabase","_callee2","senderId","databases","dbNames","tokenDetails","_context2","map","_upgrade","upgradeTransaction","_a","oldDetails","_oldDetails","_oldDetails2","contains","clear","auth","p256dh","endpoint","token","fcmToken","createTime","Date","now","subscriptionOptions","swScope","vapidKey","_x36","_x37","_x38","_x39","close","checkTokenDetails","DATABASE_NAME","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","getDbPromise","upgradeDb","createObjectStore","dbGet","_x2","_dbGet","_callee3","firebaseDependencies","key","oldTokenDetails","_context3","getKey","appConfig","dbSet","_x3","_x4","_dbSet","_callee4","_context4","put","dbRemove","_x5","_dbRemove","_callee5","_context5","delete","appId","ERROR_MAP","_ERROR_MAP","_defineProperty","ERROR_FACTORY","ErrorFactory","requestGetToken","_x6","_x7","_requestGetToken","_callee6","headers","body","subscribeOptions","responseData","response","message","_context6","getHeaders","getBody","JSON","stringify","fetch","getEndpoint","json","t0","create","errorInfo","toString","requestUpdateToken","_x8","_x9","_requestUpdateToken","_callee7","updateOptions","_context7","requestDeleteToken","_x10","_x11","_requestDeleteToken","_callee8","unsubscribeOptions","_context8","_ref2","projectId","_x12","_getHeaders","_callee9","installations","authToken","_context9","getToken","Headers","Accept","apiKey","_ref4","web","applicationPubKey","TOKEN_EXPIRATION_MS","getTokenInternal","_x13","_getTokenInternal","_callee10","messaging","pushSubscription","_context10","getPushSubscription","swRegistration","scope","getNewToken","isTokenValid","console","warn","updateToken","deleteTokenInternal","_x14","_deleteTokenInternal","_callee11","_context11","pushManager","getSubscription","unsubscribe","_x15","_x16","_updateToken","_callee12","updatedToken","updatedTokenDetails","_context12","Object","assign","_x17","_x18","_getNewToken","_callee13","_context13","_x19","_x20","_getPushSubscription","_callee14","subscription","_context14","subscribe","userVisibleOnly","applicationServerKey","dbOptions","currentOptions","isVapidKeyEqual","isEndpointEqual","isAuthEqual","isP256dhEqual","externalizePayload","internalPayload","payload","from","collapseKey","collapse_key","messageId","fcmMessageId","messagePayloadInternal","notification","title","image","icon","propagateNotificationPayload","data","propagateDataPayload","fcmOptions","click_action","link","_c","_b","_d","analyticsLabel","_e","analytics_label","propagateFcmOptions","_mergeStrings","s1","s2","resultArray","push","charAt","join","getMissingValueError","valueName","MessagingService","app","analyticsProvider","_classCallCheck","deliveryMetricsExportedToBigQueryEnabled","onBackgroundMessageHandler","onMessageHandler","logEvents","isLogServiceStarted","options","_i","_configKeys","keyName","appName","messagingSenderId","extractAppConfig","_createClass","registerDefaultSw","_x21","_registerDefaultSw","_callee15","_context15","navigator","serviceWorker","register","update","browserErrorMessage","updateSwReg","_x22","_x23","_updateSwReg","_callee16","_context16","ServiceWorkerRegistration","updateVapidKey","_x24","_x25","_updateVapidKey","_callee17","_context17","getToken$1","_x26","_x27","_getToken$","_callee18","_context18","Notification","permission","requestPermission","serviceWorkerRegistration","logToScion","_x28","_x29","_x30","_logToScion","_callee19","messageType","eventType","_context19","getEventType","logEvent","message_id","message_name","message_time","message_device_time","Math","floor","NOTIFICATION_CLICKED","PUSH_RECEIVED","Error","_messageEventListener","_callee20","dataPayload","_context20","isFirebaseMessaging","WindowMessagingFactory","container","getProvider","getImmediate","e","_x31","_x32","messageEventListener","WindowMessagingInternalFactory","isWindowSupported","_isWindowSupported","_callee21","_context21","validateIndexedDBOpenable","window","isIndexedDBAvailable","areCookiesEnabled","hasOwnProperty","PushSubscription","_deleteToken$","_callee22","_context22","getMessagingInWindow","getApp","isSupported","_","_getProvider","getModularInstance","_x34","_x35","_getToken","_callee23","_context23","deleteToken","_x33","deleteToken$1","onMessage","nextOrObserver","onMessage$1","_registerComponent","Component","registerVersion","FirebaseMessagingWeb","_WebPlugin","_inherits","_super","_createSuper","_this","isSupportedInWeb","supported","getMessaging","handleNotificationReceived","_checkPermissions","receive","convertNotificationPermissionToPermissionState","_requestPermissions","notificationPermission","_isSupported","_getToken2","_deleteToken2","_getDeliveredNotifications","throwUnavailableError","_removeDeliveredNotifications","_options","_removeAllDeliveredNotifications","_subscribeToTopic","_unsubscribeFromTopic","_createChannel","_deleteChannel","_listChannels","messagePayload","createNotificationResult","notifyListeners","notificationReceivedEvent","id","state","unavailable","WebPlugin"],"sourceRoot":""}