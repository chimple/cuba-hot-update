{"version":3,"file":"static/js/965.1444eb54.chunk.js","mappings":"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","sources":["../node_modules/@capacitor-firebase/authentication/src/web.ts"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nimport type {\n  AuthCredential as FirebaseAuthCredential,\n  AuthProvider as FirebaseAuthProvider,\n  CustomParameters as FirebaseCustomParameters,\n  User as FirebaseUser,\n  UserCredential as FirebaseUserCredential,\n} from 'firebase/auth';\nimport {\n  EmailAuthProvider,\n  FacebookAuthProvider,\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  OAuthCredential,\n  OAuthProvider,\n  TwitterAuthProvider,\n  applyActionCode,\n  confirmPasswordReset,\n  connectAuthEmulator,\n  createUserWithEmailAndPassword,\n  deleteUser,\n  getAdditionalUserInfo,\n  getAuth,\n  getRedirectResult,\n  isSignInWithEmailLink,\n  linkWithCredential,\n  linkWithPopup,\n  linkWithRedirect,\n  reload,\n  sendEmailVerification,\n  sendPasswordResetEmail,\n  sendSignInLinkToEmail,\n  signInAnonymously,\n  signInWithCustomToken,\n  signInWithEmailAndPassword,\n  signInWithEmailLink,\n  signInWithPopup,\n  signInWithRedirect,\n  unlink,\n  updateEmail,\n  updatePassword,\n  updateProfile,\n} from 'firebase/auth';\n\nimport type {\n  AdditionalUserInfo,\n  ApplyActionCodeOptions,\n  AuthCredential,\n  AuthStateChange,\n  ConfirmPasswordResetOptions,\n  ConfirmVerificationCodeOptions,\n  CreateUserWithEmailAndPasswordOptions,\n  FirebaseAuthenticationPlugin,\n  GetCurrentUserResult,\n  GetIdTokenOptions,\n  GetIdTokenResult,\n  GetTenantIdResult,\n  IsSignInWithEmailLinkOptions,\n  IsSignInWithEmailLinkResult,\n  LinkResult,\n  LinkWithEmailAndPasswordOptions,\n  LinkWithEmailLinkOptions,\n  LinkWithOAuthOptions,\n  LinkWithPhoneNumberOptions,\n  SendPasswordResetEmailOptions,\n  SendSignInLinkToEmailOptions,\n  SetLanguageCodeOptions,\n  SetTenantIdOptions,\n  SignInResult,\n  SignInWithCustomTokenOptions,\n  SignInWithEmailAndPasswordOptions,\n  SignInWithEmailLinkOptions,\n  SignInWithOAuthOptions,\n  SignInWithPhoneNumberOptions,\n  UnlinkOptions,\n  UnlinkResult,\n  UpdateEmailOptions,\n  UpdatePasswordOptions,\n  UpdateProfileOptions,\n  UseEmulatorOptions,\n  User,\n} from './definitions';\nimport { ProviderId } from './definitions';\n\nexport class FirebaseAuthenticationWeb\n  extends WebPlugin\n  implements FirebaseAuthenticationPlugin\n{\n  public static readonly ERROR_NO_USER_SIGNED_IN = 'No user is signed in.';\n\n  constructor() {\n    super();\n    const auth = getAuth();\n    auth.onAuthStateChanged(user => this.handleAuthStateChange(user));\n  }\n\n  public async applyActionCode(options: ApplyActionCodeOptions): Promise<void> {\n    const auth = getAuth();\n    return applyActionCode(auth, options.oobCode);\n  }\n\n  public async createUserWithEmailAndPassword(\n    options: CreateUserWithEmailAndPasswordOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await createUserWithEmailAndPassword(\n      auth,\n      options.email,\n      options.password,\n    );\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async confirmPasswordReset(\n    options: ConfirmPasswordResetOptions,\n  ): Promise<void> {\n    const auth = getAuth();\n    return confirmPasswordReset(auth, options.oobCode, options.newPassword);\n  }\n\n  public async confirmVerificationCode(\n    _options: ConfirmVerificationCodeOptions,\n  ): Promise<SignInResult> {\n    throw new Error('Not implemented on web.');\n  }\n\n  public async deleteUser(): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return deleteUser(currentUser);\n  }\n\n  public async getCurrentUser(): Promise<GetCurrentUserResult> {\n    const auth = getAuth();\n    const userResult = this.createUserResult(auth.currentUser);\n    const result: GetCurrentUserResult = {\n      user: userResult,\n    };\n    return result;\n  }\n\n  public async getIdToken(\n    options?: GetIdTokenOptions,\n  ): Promise<GetIdTokenResult> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    const idToken = await auth.currentUser.getIdToken(options?.forceRefresh);\n    const result: GetIdTokenResult = {\n      token: idToken || '',\n    };\n    return result;\n  }\n\n  public async getRedirectResult(): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await getRedirectResult(auth);\n    const authCredential = userCredential\n      ? OAuthProvider.credentialFromResult(userCredential)\n      : null;\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async getTenantId(): Promise<GetTenantIdResult> {\n    const auth = getAuth();\n    return {\n      tenantId: auth.tenantId,\n    };\n  }\n\n  public async isSignInWithEmailLink(\n    options: IsSignInWithEmailLinkOptions,\n  ): Promise<IsSignInWithEmailLinkResult> {\n    const auth = getAuth();\n    return {\n      isSignInWithEmailLink: isSignInWithEmailLink(auth, options.emailLink),\n    };\n  }\n\n  public async linkWithApple(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new OAuthProvider(ProviderId.APPLE);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithEmailAndPassword(\n    options: LinkWithEmailAndPasswordOptions,\n  ): Promise<LinkResult> {\n    const authCredential = EmailAuthProvider.credential(\n      options.email,\n      options.password,\n    );\n    const userCredential = await this.linkCurrentUserWithCredential(\n      authCredential,\n    );\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithEmailLink(\n    options: LinkWithEmailLinkOptions,\n  ): Promise<LinkResult> {\n    const authCredential = EmailAuthProvider.credentialWithLink(\n      options.email,\n      options.emailLink,\n    );\n    const userCredential = await this.linkCurrentUserWithCredential(\n      authCredential,\n    );\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithFacebook(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new FacebookAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      FacebookAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithGameCenter(): Promise<LinkResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async linkWithGithub(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new GithubAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      GithubAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithGoogle(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new GoogleAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      GoogleAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithMicrosoft(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new OAuthProvider(ProviderId.MICROSOFT);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithPhoneNumber(\n    _options: LinkWithPhoneNumberOptions,\n  ): Promise<void> {\n    throw new Error('Not implemented on web.');\n  }\n\n  public async linkWithPlayGames(): Promise<LinkResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async linkWithTwitter(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new TwitterAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      TwitterAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async linkWithYahoo(\n    options?: LinkWithOAuthOptions,\n  ): Promise<LinkResult> {\n    const provider = new OAuthProvider(ProviderId.YAHOO);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.linkCurrentUserWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async reload(): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return reload(currentUser);\n  }\n\n  public async sendEmailVerification(): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return sendEmailVerification(currentUser);\n  }\n\n  public async sendPasswordResetEmail(\n    options: SendPasswordResetEmailOptions,\n  ): Promise<void> {\n    const auth = getAuth();\n    return sendPasswordResetEmail(auth, options.email);\n  }\n\n  public async sendSignInLinkToEmail(\n    options: SendSignInLinkToEmailOptions,\n  ): Promise<void> {\n    const auth = getAuth();\n    return sendSignInLinkToEmail(\n      auth,\n      options.email,\n      options.actionCodeSettings,\n    );\n  }\n\n  public async setLanguageCode(options: SetLanguageCodeOptions): Promise<void> {\n    const auth = getAuth();\n    auth.languageCode = options.languageCode;\n  }\n\n  public async signInAnonymously(): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInAnonymously(auth);\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async setTenantId(options: SetTenantIdOptions): Promise<void> {\n    const auth = getAuth();\n    auth.tenantId = options.tenantId;\n  }\n\n  public async signInWithApple(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider(ProviderId.APPLE);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithCustomToken(\n    options: SignInWithCustomTokenOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInWithCustomToken(auth, options.token);\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async signInWithEmailAndPassword(\n    options: SignInWithEmailAndPasswordOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInWithEmailAndPassword(\n      auth,\n      options.email,\n      options.password,\n    );\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async signInWithEmailLink(\n    options: SignInWithEmailLinkOptions,\n  ): Promise<SignInResult> {\n    const auth = getAuth();\n    const userCredential = await signInWithEmailLink(\n      auth,\n      options.email,\n      options.emailLink,\n    );\n    return this.createSignInResult(userCredential, null);\n  }\n\n  public async signInWithFacebook(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new FacebookAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      FacebookAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithGithub(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new GithubAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      GithubAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithGoogle(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new GoogleAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      GoogleAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithMicrosoft(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider(ProviderId.MICROSOFT);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithPhoneNumber(\n    _options: SignInWithPhoneNumberOptions,\n  ): Promise<void> {\n    throw new Error('Not implemented on web.');\n  }\n\n  public async signInWithPlayGames(): Promise<SignInResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async signInWithGameCenter(): Promise<SignInResult> {\n    throw new Error('Not available on web.');\n  }\n\n  public async signInWithTwitter(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new TwitterAuthProvider();\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential =\n      TwitterAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signInWithYahoo(\n    options?: SignInWithOAuthOptions,\n  ): Promise<SignInResult> {\n    const provider = new OAuthProvider(ProviderId.YAHOO);\n    this.applySignInOptions(options || {}, provider);\n    const userCredential = await this.signInWithPopupOrRedirect(\n      provider,\n      options?.mode,\n    );\n    const authCredential = OAuthProvider.credentialFromResult(userCredential);\n    return this.createSignInResult(userCredential, authCredential);\n  }\n\n  public async signOut(): Promise<void> {\n    const auth = getAuth();\n    await auth.signOut();\n  }\n\n  public async unlink(options: UnlinkOptions): Promise<UnlinkResult> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    const user = await unlink(auth.currentUser, options.providerId);\n    const userResult = this.createUserResult(user);\n    const result: UnlinkResult = {\n      user: userResult,\n    };\n    return result;\n  }\n\n  public async updateEmail(options: UpdateEmailOptions): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return updateEmail(currentUser, options.newEmail);\n  }\n\n  public async updatePassword(options: UpdatePasswordOptions): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return updatePassword(currentUser, options.newPassword);\n  }\n\n  public async updateProfile(options: UpdateProfileOptions): Promise<void> {\n    const auth = getAuth();\n    const currentUser = auth.currentUser;\n    if (!currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return updateProfile(currentUser, options);\n  }\n\n  public async useAppLanguage(): Promise<void> {\n    const auth = getAuth();\n    auth.useDeviceLanguage();\n  }\n\n  public async useEmulator(options: UseEmulatorOptions): Promise<void> {\n    const auth = getAuth();\n    const port = options.port || 9099;\n    connectAuthEmulator(auth, `${options.host}:${port}`);\n  }\n\n  private handleAuthStateChange(user: FirebaseUser | null): void {\n    const userResult = this.createUserResult(user);\n    const change: AuthStateChange = {\n      user: userResult,\n    };\n    this.notifyListeners('authStateChange', change);\n  }\n\n  private applySignInOptions(\n    options: SignInWithOAuthOptions,\n    provider: OAuthProvider | GoogleAuthProvider | FacebookAuthProvider,\n  ) {\n    if (options.customParameters) {\n      const customParameters: FirebaseCustomParameters = {};\n      options.customParameters.map(parameter => {\n        customParameters[parameter.key] = parameter.value;\n      });\n      provider.setCustomParameters(customParameters);\n    }\n    if (options.scopes) {\n      for (const scope of options.scopes) {\n        provider.addScope(scope);\n      }\n    }\n  }\n\n  public signInWithPopupOrRedirect(\n    provider: FirebaseAuthProvider,\n    mode?: 'popup' | 'redirect',\n  ): Promise<FirebaseUserCredential | never> {\n    const auth = getAuth();\n    if (mode === 'redirect') {\n      return signInWithRedirect(auth, provider);\n    } else {\n      return signInWithPopup(auth, provider);\n    }\n  }\n\n  public linkCurrentUserWithPopupOrRedirect(\n    provider: FirebaseAuthProvider,\n    mode?: 'popup' | 'redirect',\n  ): Promise<FirebaseUserCredential | never> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    if (mode === 'redirect') {\n      return linkWithRedirect(auth.currentUser, provider);\n    } else {\n      return linkWithPopup(auth.currentUser, provider);\n    }\n  }\n\n  public linkCurrentUserWithCredential(\n    credential: FirebaseAuthCredential,\n  ): Promise<FirebaseUserCredential> {\n    const auth = getAuth();\n    if (!auth.currentUser) {\n      throw new Error(FirebaseAuthenticationWeb.ERROR_NO_USER_SIGNED_IN);\n    }\n    return linkWithCredential(auth.currentUser, credential);\n  }\n\n  private createSignInResult(\n    userCredential: FirebaseUserCredential | null,\n    authCredential: FirebaseAuthCredential | null,\n  ): SignInResult {\n    const userResult = this.createUserResult(userCredential?.user || null);\n    const credentialResult = this.createCredentialResult(authCredential);\n    const additionalUserInfoResult =\n      this.createAdditionalUserInfoResult(userCredential);\n    const result: SignInResult = {\n      user: userResult,\n      credential: credentialResult,\n      additionalUserInfo: additionalUserInfoResult,\n    };\n    return result;\n  }\n\n  private createCredentialResult(\n    credential: FirebaseAuthCredential | null,\n  ): AuthCredential | null {\n    if (!credential) {\n      return null;\n    }\n    const result: AuthCredential = {\n      providerId: credential.providerId,\n    };\n    if (credential instanceof OAuthCredential) {\n      result.accessToken = credential.accessToken;\n      result.idToken = credential.idToken;\n      result.secret = credential.secret;\n    }\n    return result;\n  }\n\n  private createUserResult(user: FirebaseUser | null): User | null {\n    if (!user) {\n      return null;\n    }\n    const result: User = {\n      displayName: user.displayName,\n      email: user.email,\n      emailVerified: user.emailVerified,\n      isAnonymous: user.isAnonymous,\n      phoneNumber: user.phoneNumber,\n      photoUrl: user.photoURL,\n      providerId: user.providerId,\n      tenantId: user.tenantId,\n      uid: user.uid,\n    };\n    return result;\n  }\n\n  private createAdditionalUserInfoResult(\n    credential: FirebaseUserCredential | null,\n  ): AdditionalUserInfo | null {\n    if (!credential) {\n      return null;\n    }\n    const additionalUserInfo = getAdditionalUserInfo(credential);\n    if (!additionalUserInfo) {\n      return null;\n    }\n    const { isNewUser, profile, providerId, username } = additionalUserInfo;\n    const result: AdditionalUserInfo = {\n      isNewUser,\n    };\n    if (providerId !== null) {\n      result.providerId = providerId;\n    }\n    if (profile !== null) {\n      result.profile = profile as { [key: string]: unknown };\n    }\n    if (username !== null && username !== undefined) {\n      result.username = username;\n    }\n    return result;\n  }\n}\n"],"names":["FirebaseAuthenticationWeb","_WebPlugin","_inherits","_super","_createSuper","_this","_classCallCheck","call","getAuth","onAuthStateChanged","user","handleAuthStateChange","_createClass","key","value","_applyActionCode2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","options","auth","wrap","_context","prev","next","abrupt","applyActionCode","oobCode","stop","_x","apply","arguments","_createUserWithEmailAndPassword2","_callee2","userCredential","_context2","createUserWithEmailAndPassword","email","password","sent","this","createSignInResult","_x2","_confirmPasswordReset2","_callee3","_context3","confirmPasswordReset","newPassword","_x3","_confirmVerificationCode","_callee4","_options","_context4","Error","_x4","_deleteUser2","_callee5","currentUser","_context5","ERROR_NO_USER_SIGNED_IN","deleteUser","_getCurrentUser","_callee6","userResult","result","_context6","createUserResult","_getIdToken","_callee7","idToken","_context7","getIdToken","forceRefresh","token","_x5","_getRedirectResult2","_callee8","authCredential","_context8","getRedirectResult","OAuthProvider","credentialFromResult","_getTenantId","_callee9","_context9","tenantId","_isSignInWithEmailLink2","_callee10","_context10","isSignInWithEmailLink","emailLink","_x6","_linkWithApple","_callee11","provider","_context11","ProviderId","APPLE","applySignInOptions","linkCurrentUserWithPopupOrRedirect","mode","_x7","_linkWithEmailAndPassword","_callee12","_context12","EmailAuthProvider","credential","linkCurrentUserWithCredential","_x8","_linkWithEmailLink","_callee13","_context13","credentialWithLink","_x9","_linkWithFacebook","_callee14","_context14","FacebookAuthProvider","_x10","_linkWithGameCenter","_callee15","_context15","_linkWithGithub","_callee16","_context16","GithubAuthProvider","_x11","_linkWithGoogle","_callee17","_context17","GoogleAuthProvider","_x12","_linkWithMicrosoft","_callee18","_context18","MICROSOFT","_x13","_linkWithPhoneNumber","_callee19","_context19","_x14","_linkWithPlayGames","_callee20","_context20","_linkWithTwitter","_callee21","_context21","TwitterAuthProvider","_x15","_linkWithYahoo","_callee22","_context22","YAHOO","_x16","_reload2","_callee23","_context23","reload","_sendEmailVerification2","_callee24","_context24","sendEmailVerification","_sendPasswordResetEmail2","_callee25","_context25","sendPasswordResetEmail","_x17","_sendSignInLinkToEmail2","_callee26","_context26","sendSignInLinkToEmail","actionCodeSettings","_x18","_setLanguageCode","_callee27","_context27","languageCode","_x19","_signInAnonymously2","_callee28","_context28","signInAnonymously","_setTenantId","_callee29","_context29","_x20","_signInWithApple","_callee30","_context30","signInWithPopupOrRedirect","_x21","_signInWithCustomToken2","_callee31","_context31","signInWithCustomToken","_x22","_signInWithEmailAndPassword2","_callee32","_context32","signInWithEmailAndPassword","_x23","_signInWithEmailLink2","_callee33","_context33","signInWithEmailLink","_x24","_signInWithFacebook","_callee34","_context34","_x25","_signInWithGithub","_callee35","_context35","_x26","_signInWithGoogle","_callee36","_context36","_x27","_signInWithMicrosoft","_callee37","_context37","_x28","_signInWithPhoneNumber","_callee38","_context38","_x29","_signInWithPlayGames","_callee39","_context39","_signInWithGameCenter","_callee40","_context40","_signInWithTwitter","_callee41","_context41","_x30","_signInWithYahoo","_callee42","_context42","_x31","_signOut","_callee43","_context43","signOut","_unlink2","_callee44","_context44","unlink","providerId","_x32","_updateEmail2","_callee45","_context45","updateEmail","newEmail","_x33","_updatePassword2","_callee46","_context46","updatePassword","_x34","_updateProfile2","_callee47","_context47","updateProfile","_x35","_useAppLanguage","_callee48","_context48","useDeviceLanguage","_useEmulator","_callee49","port","_context49","connectAuthEmulator","concat","host","_x36","change","notifyListeners","customParameters","map","parameter","setCustomParameters","scopes","_step","_iterator","_createForOfIteratorHelper","s","n","done","scope","addScope","err","e","f","signInWithRedirect","signInWithPopup","linkWithRedirect","linkWithPopup","linkWithCredential","createCredentialResult","additionalUserInfo","createAdditionalUserInfoResult","OAuthCredential","accessToken","secret","displayName","emailVerified","isAnonymous","phoneNumber","photoUrl","photoURL","uid","getAdditionalUserInfo","isNewUser","profile","username","undefined","WebPlugin"],"sourceRoot":""}